/* Import Tailwind CSS */
@import "tailwindcss";

/* Custom scrollbar for dark mode */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background-color: #121212; /* dark-bg */
}

::-webkit-scrollbar-thumb {
  background-color: #2e2e2e; /* dark-border */
  border-radius: 9999px;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #4b5563; /* gray-600 */
}

/* Navbar blur */
nav.sticky {
  /* Apply backdrop blur and a semi-transparent background */
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px); /* For Safari */
  /* Ensure the background color is semi-transparent for the blur to be visible */
  /* The actual color will be set by Tailwind's bg-dark-card, 
     but we might need to adjust its opacity or override it here if it's not semi-transparent by default.
     For now, assuming bg-dark-card might be solid, let's add a fallback or ensure it's handled in App.jsx's Tailwind classes.
     If bg-dark-card is already #1e1e1e (solid), the blur won't show through. 
     We need something like bg-dark-card/80 in App.jsx or a specific rgba here.
     Let's assume App.jsx will handle the semi-transparent background for the nav.
  */
}

/* Utility classes - converted from @apply to plain CSS */
.card {
  background-color: #1e1e1e; /* dark-card */
  border: 1px solid #2e2e2e; /* dark-border */
  border-radius: 0.5rem; /* rounded-lg */
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); /* shadow-lg */
  overflow: hidden;
}

.btn-primary {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background-color: #0284c7; /* primary-600 */
  color: white;
  font-weight: 500;
  border-radius: 0.375rem; /* rounded-md */
  transition-property: background-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.btn-primary:hover {
  background-color: #0369a1; /* primary-700 */
}

.btn-primary:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: #0ea5e9; /* primary-500 */
  --tw-ring-offset-color: #121212; /* dark-bg */
}

.btn-secondary {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background-color: #374151; /* gray-700 */
  color: white;
  font-weight: 500;
  border-radius: 0.375rem; /* rounded-md */
  transition-property: background-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.btn-secondary:hover {
  background-color: #1f2937; /* gray-800 */
}

.btn-secondary:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: #6b7280; /* gray-500 */
  --tw-ring-offset-color: #121212; /* dark-bg */
}

.input-field {
  background-color: #121212; /* dark-bg */
  border: 1px solid #2e2e2e; /* dark-border */
  border-radius: 0.375rem; /* rounded-md */
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: white;
}

.input-field::placeholder {
  color: #6b7280; /* gray-500 */
}

.input-field:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: #0ea5e9; /* primary-500 */
  border-color: #0ea5e9; /* primary-500 */
}

/* File upload zone */
.upload-zone {
  border: 2px dashed #2e2e2e; /* dark-border */
  border-radius: 0.5rem; /* rounded-lg */
  padding: 2rem;
  text-align: center;
  cursor: pointer;
  transition-property: border-color, background-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.upload-zone:hover {
  border-color: #0ea5e9; /* primary-500 */
  background-color: #121212; /* dark-bg */
}

.upload-zone.active {
  border-color: #0ea5e9; /* primary-500 */
  background-color: rgba(14, 165, 233, 0.1); /* bg-opacity-10 bg-primary-500 */
}


/* Basic Responsive Adjustments */
/* Ensure main content and footer are responsive */
main, footer {
  width: 100%;
}

/* Small devices (landscape phones, 576px and up) */
@media (min-width: 576px) {
  /* Add specific styles for small devices if needed */
  /* Example: Adjust padding for sections */
  .page-section {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) {
  /* Example: Adjust grid columns for tools/features */
  .features-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .tools-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .page-section {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) {
  .features-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .tools-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

/* Login/Signup form responsiveness */
.auth-form-container {
  width: 100%;
  max-width: 28rem; /* max-w-md */
  margin-left: auto;
  margin-right: auto;
}

/* Navbar responsiveness: simple hamburger for very small screens if needed, or ensure items wrap/hide */
/* For now, Tailwind's flex properties should handle basic wrapping. More complex scenarios might need a JS-driven menu. */
/* Ensure navbar items don't overflow excessively on small screens */
nav .flex.justify-between > div {
  flex-wrap: wrap; /* Allow items to wrap if space is tight */
}